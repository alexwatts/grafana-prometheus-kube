apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-set
spec:
  replicas: 1
  serviceName: "prometheus"
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:7.5.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              memory: 500Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pvc
      initContainers:
        - name: grafana-data-permission-fix
          image: busybox
          command: [ "/bin/chmod","-R","777", "/var/lib/grafana" ]
          volumeMounts:
            - name: grafana-pvc
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-pvc
          persistentVolumeClaim:
            claimName: grafana-pvc
  volumeClaimTemplates:
    - metadata:
        name: grafana-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: do-block-storage